#SPDX-License-Identifier: MIT-0
---
- name: Install unzip
  block:
    - name: Install unzip (Debian)
      ansible.builtin.apt:
        name: unzip
        state: present
      when: ansible_os_family == 'Debian'
    - name: Install unzip (RedHat)
      ansible.builtin.dnf:
        name: unzip
        state: present
      when: ansible_os_family == 'RedHat'

- name: Install Nginx
  block:
    - name: Install Nginx (Debian)
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: true
      when: ansible_os_family == 'Debian'
    - name: Install Nginx (RedHat)
      ansible.builtin.dnf:
        name: nginx
        state: present
      when: ansible_os_family == 'RedHat'

- name: Ensure lighthouse directory exists
  ansible.builtin.file:
    path: "{{ lighthouse_dest }}"
    state: directory
    mode: '0755'

- name: Download Lighthouse static files
  ansible.builtin.get_url:
    url: "https://github.com/VKCOM/lighthouse/archive/refs/heads/ {{ lighthouse_version }}.zip"
    dest: "/tmp/lighthouse.zip"
    mode: '0644'

- name: Unarchive Lighthouse
  ansible.builtin.unarchive:
    src: "/tmp/lighthouse.zip"
    dest: "/var/www"
    remote_src: true
  when: not ansible_check_mode

- name: Move Lighthouse static files to target location
  ansible.builtin.command:
    cmd: mv /var/www/lighthouse-{{ lighthouse_version }} {{ lighthouse_dest }}
    args:
      creates: "{{ lighthouse_dest }}"

- name: Clean up lighthouse zip file
  ansible.builtin.file:
    path: /tmp/lighthouse.zip
    state: absent

- name: Deploy Nginx config for Lighthouse
  ansible.builtin.template:
    src: templates/lighthouse-nginx.conf.j2
    dest: /etc/nginx/sites-available/lighthouse.conf
    mode: '0644'

- name: Clean up Nginx default config
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Enable Lighthouse site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/lighthouse.conf
    dest: /etc/nginx/sites-enabled/lighthouse.conf
    state: link
    force: true
  notify: Restart nginx

- name: Ensure nginx is running
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Check LightHouse HTTP response on localhost
  ansible.builtin.uri:
    url: http://localhost/
    status_code: 200
    return_content: true
  register: lighthouse_http

- name: Assert LightHouse HTML page is present
  ansible.builtin.assert:
    that:
      - "'LightHouse' in lighthouse_http.content or 'VKCOM' in lighthouse_http.content"
    fail_msg: "LightHouse UI is NOT accessible or content is incorrect."
    success_msg: "LightHouse UI is working."
    when: not ansible_check_mode

- name: Test connection to ClickHouse from LightHouse
  ansible.builtin.uri:
    url: "http://{{ hostvars['clickhouse-01']['ansible_host'] }}:8123/"
    status_code: 200
    return_content: true
  register: ch_response

- name: Assert ClickHouse returned OK from LightHouse
  ansible.builtin.assert:
    that:
      - "'Ok.' in ch_response.content"
    fail_msg: "LightHouse cannot reach ClickHouse at port 8123."
    success_msg: "ClickHouse is reachable from LightHouse."
    when: not ansible_check_mode
